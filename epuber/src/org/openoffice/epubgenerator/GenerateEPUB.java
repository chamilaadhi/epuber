/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package org.openoffice.epubgenerator;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import nl.siegmann.epublib.domain.Author;
import nl.siegmann.epublib.domain.Book;
import nl.siegmann.epublib.domain.Resource;
import nl.siegmann.epublib.epub.EpubWriter;
import org.openoffice.htmlgenerator.ChapterMaker;
/**
 *
 * @author Chamila
 */
public class GenerateEPUB {
    private final MetaData meta;
    private int chapterNo;
    private Book book;
    private final String dir;
    private final String path;
    private boolean status;

    public GenerateEPUB(MetaData md) {
        chapterNo=0;
        meta=md;
        dir="C:\\Users\\Chamila\\Documents\\NetBeansProjects\\ePUBer_v2";
         path=dir+"\\Chapter";
        ChapterMaker chap=new ChapterMaker(dir, md);//get the single HTML file created by OO-Writer
                                                    //and break them in to seperate HTML chapters.
       // generate(path);//create the epub file using HTML files
        
    }
    public boolean  generate(){
      
       book = new Book();
       setBookMetadata();
       addChapters();
       createBook();


       return status;
    }


private void setBookMetadata(){
        book.getMetadata().addTitle(meta.getTitle());
        book.getMetadata().addAuthor(new Author(meta.getAuthor()));

}
private void createBook(){
        FileOutputStream out = null;
        try {
            // Write the Book as Epub
            EpubWriter epubWriter = new EpubWriter();
            String outPut = meta.getOutPutLocation() + "\\" + meta.getOutPutFileNm() + ".epub";//output file location

            out = new FileOutputStream(outPut);
            epubWriter.write(book, out);//create epub file using all the data
            out.flush();
            out.close();
            status=true;

        } catch (FileNotFoundException ex) {
            status=false;
           // Logger.getLogger(GenerateEPUB.class.getName()).log(Level.SEVERE, null, ex);

        }  catch (IOException ex) {
            status=false;
            //    Logger.getLogger(GenerateEPUB.class.getName()).log(Level.SEVERE, null, ex);
        }
}
private void addChapters(){

    try {

            File file=new File(path); //go to the folder where the chapters reside.this chapters are in HTML
                                      //they are generated by ChapterMaker class
            String[] chapters=file.list();//get the names of all the HTML files in the folder
            for(String chap:chapters){
                //add each HTML file as a chapter in the epub file
                DataInputStream in = new DataInputStream(new BufferedInputStream(new FileInputStream(path+"\\"+chap)));
                book.addSection("Chapter "+chapterNo, new Resource((InputStream)in, chapterNo+".html"));
                chapterNo++;
            in.close();
          }
        } catch (FileNotFoundException ex) {
            status=false;
                //Logger.getLogger(GenerateEPUB.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            status=false;
               // Logger.getLogger(GenerateEPUB.class.getName()).log(Level.SEVERE, null, ex);
        }
}

public static void main(String arg[]){
    MetaData md=new MetaData();
    md.addOutLocation("C:\\Users\\Chamila\\Documents\\NetBeansProjects\\ePUBer_v2");
    md.addOutName("testEpub");
    new GenerateEPUB(md);

}

}
