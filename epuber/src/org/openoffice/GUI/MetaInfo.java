/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MetaInfo.java
 *
 * Created on Feb 1, 2012, 9:52:10 AM
 */

package org.openoffice.GUI;

import com.sun.star.lang.XComponent;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.openoffice.SaveDocument;
import org.openoffice.epubgenerator.GenerateEPUB;
import org.openoffice.epubgenerator.MetaData;
import org.openoffice.htmlgenerator.ChapterGenerator;

/**
 *
 * @author Chamila
 */
public class MetaInfo extends javax.swing.JFrame {
    private String imagePath="";
    private String author="";
    private String title="";
    private final Image im;
    private MetaData metaData;
    private  XComponent xDoc;
    private  String sPath;
    private JFileChooser fc;


    /** Creates new form MetaInfo */
    public MetaInfo(){//MetaData md) {
       // sPath="C:\\Users\\Chamila\\Documents\\NetBeansProjects\\ePUBer_v2";//change this
        this.xDoc=null;//xDoc;
        this.metaData=new MetaData();
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            Logger.getLogger(MetaInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
        im = Toolkit.getDefaultToolkit().getImage("EPUB_logo.png");
        initComponents();
         
        //this.setIconImage(im);
        this.setLocationRelativeTo(this);
    }

   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        outName = new javax.swing.JTextField();
        outLocation = new javax.swing.JTextField();
        brsLoc = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        brsCover = new javax.swing.JButton();
        path = new javax.swing.JTextField();
        athr = new javax.swing.JTextField();
        ttl = new javax.swing.JTextField();
        cover = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setTitle("Fill Book Metadata");
        setIconImage(im);
        setIconImages(null);

        jButton2.setText("Generate EPUB");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));

        outName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outNameActionPerformed(evt);
            }
        });

        outLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outLocationActionPerformed(evt);
            }
        });

        brsLoc.setText("Browse");
        brsLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brsLocActionPerformed(evt);
            }
        });

        jLabel3.setText("File Name");

        jLabel4.setText("Location");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(outLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(brsLoc))
                    .addComponent(outName, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(brsLoc))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Book Metadata"));

        brsCover.setText("Browse");
        brsCover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brsCoverActionPerformed(evt);
            }
        });

        ttl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ttlActionPerformed(evt);
            }
        });

        cover.setSelected(true);
        cover.setText("Cover Page");
        cover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coverActionPerformed(evt);
            }
        });

        jLabel2.setText("Author");

        jLabel1.setText("Title");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(cover)
                        .addGap(18, 18, 18)
                        .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(brsCover, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(athr, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(ttl, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))))
                .addGap(12, 12, 12))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ttl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(athr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cover)
                    .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brsCover))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void brsCoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brsCoverActionPerformed
        // TODO add your handling code here:
        fc = new JFileChooser();
        fc.setDialogTitle("Select the cover page");

        fc.addChoosableFileFilter(new ImageFilter());//add filter to select only image files
        int result = fc.showOpenDialog(this);


       
        if(result==JFileChooser.APPROVE_OPTION){
            File img = fc.getSelectedFile();
            imagePath=img.getPath();  //store the location in metadata and display
            path.setText(imagePath);  //the location in the text field
        }


    }//GEN-LAST:event_brsCoverActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void ttlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ttlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ttlActionPerformed

    private void coverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coverActionPerformed
        // TODO add your handling code here:
       if(cover.isSelected())
       {
       path.setEnabled(true);
       brsCover.setEnabled(true);

       }
           
       else
       {
       path.setEnabled(false);
       brsCover.setEnabled(false);
       }
    }//GEN-LAST:event_coverActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:JOptionPane.showMessageDialog(this,"Invalid user name and password","Invalid",JOptionPane.ERROR_MESSAGE );
        author=athr.getText();
        title=ttl.getText();
        metaData.setAuthor(author);
        metaData.setTitle(title);
        metaData.addCover(imagePath);
        metaData.addOutName(outName.getText());

        //SaveDocument.saveAsHTML(xDoc, sPath, title);
        GenerateEPUB gen=new GenerateEPUB(metaData);
        boolean status=gen.generate();
        if(status)
            JOptionPane.showMessageDialog(this,"File generated to "+metaData.getOutPutLocation(),"EPUB generated Successfully",JOptionPane.PLAIN_MESSAGE );
        else
        {   JOptionPane.showMessageDialog(this,"Encountered an Error while generating ","Error",JOptionPane.ERROR_MESSAGE );}
        this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void outNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outNameActionPerformed

    private void outLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outLocationActionPerformed

    private void brsLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brsLocActionPerformed
       
        fc = new JFileChooser();
        fc.setDialogTitle("Select the location for the output file");
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = fc.showOpenDialog(this);

         if(result==JFileChooser.APPROVE_OPTION){
            File loc = fc.getSelectedFile();
            metaData.addOutLocation(loc.getPath()); //store the location in metadata and display
            outLocation.setText(loc.getPath());     //the location in the text field
        }

        
    }//GEN-LAST:event_brsLocActionPerformed
    public String getAuthor(){return author;}
     public String getTitle(){return title;}
     public String getImgPath(){return imagePath;}


    /**
    * @param args the command line arguments
    */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField athr;
    private javax.swing.JButton brsCover;
    private javax.swing.JButton brsLoc;
    private javax.swing.JCheckBox cover;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField outLocation;
    private javax.swing.JTextField outName;
    private javax.swing.JTextField path;
    private javax.swing.JTextField ttl;
    // End of variables declaration//GEN-END:variables

}
class ImageFilter
    extends javax.swing.filechooser.FileFilter
{
    public boolean accept(File f)
    {
        if (f.isDirectory())
           return true;
        String name = f.getName();
        //check for linux files
        if (name.matches(".*\\.jpg")||name.matches(".*\\.jpeg")||name.matches(".*\\.png"))
           return true;
        else
           return false;
    }
    public String getDescription()
    {
        return "Image files (*.jpg,*jpeg,*.png)";
    }
   
}



